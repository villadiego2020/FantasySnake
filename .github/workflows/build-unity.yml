name: Build Unity Game

on: 
  push:
    branches:
      - main  # ‚úÖ Trigger ‡πÄ‡∏°‡∏∑‡πà‡∏≠ push ‡πÑ‡∏õ‡∏ó‡∏µ‡πà branch `main`
  workflow_dispatch:  # ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏£‡∏±‡∏ô workflow ‡πÄ‡∏≠‡∏á

jobs:
  buildForAll:
    name: Build for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [Client, Server]  # ‚úÖ Build ‡∏ó‡∏±‡πâ‡∏á Client ‡πÅ‡∏•‡∏∞ Server
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Cache Library Files
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.target }}-${{ github.run_id }}
          restore-keys: |
            Library-${{ matrix.target }}-

      - name: Build Unity Game
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ secrets.UNITY_VERSION }}
          targetPlatform: StandaloneWindows64
          buildMethod: "BuildScript.Build${{ matrix.target }}"  # ‚úÖ ‡πÉ‡∏ä‡πâ BuildScript.BuildClient ‡∏´‡∏£‡∏∑‡∏≠ BuildScript.BuildServer

      - name: Check if Build Folder Exists
        run: |
          ls -la Builds/Windows || echo "‚ö†Ô∏è Folder not found!"
          ls -la Builds/Windows/${{ matrix.target }} || echo "‚ö†Ô∏è Build target folder not found!"

      - name: Fix Permissions
        run: chmod -R 777 Builds/Windows

      - name: Remove Old Zip (if exists)
        run: |
          rm -f Builds/Windows/Client.zip
          rm -f Builds/Windows/Server.zip

      - name: Compress Build Files
        run: |
          mkdir -p Builds/Windows
          zip -r Builds/Windows/Client.zip Builds/Windows/Client
          zip -r Builds/Windows/Server.zip Builds/Windows/Server

      - name: Upload Build to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.target }}
          path: Builds/Windows/${{ matrix.target }}.zip

  release:
    name: Create GitHub Release
    needs: buildForAll  # ‚úÖ ‡∏£‡∏±‡∏ô Release ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Build ‡πÄ‡∏™‡∏£‡πá‡∏à
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts (Client)
        uses: actions/download-artifact@v4
        with:
          name: Build-Client
          path: Builds/Windows/Client.zip

      - name: Download Build Artifacts (Server)
        uses: actions/download-artifact@v4
        with:
          name: Build-Server
          path: Builds/Windows/Server.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: v1.0.${{ github.run_number }}  # ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ Release ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
          name: "Release v1.0.${{ github.run_number }}"
          body: |
            üéâ **New Release: v1.0.${{ github.run_number }}**
            - üñ•Ô∏è **Client**: [Download](https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/Client.zip)
            - üñ•Ô∏è **Server**: [Download](https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/Server.zip)
          draft: false
          prerelease: false
          files: |
            Builds/Windows/Client.zip
            Builds/Windows/Server.zip

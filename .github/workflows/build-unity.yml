name: Build Unity Game

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  buildForAll:
    name: Build for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [Client, Server]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Unity Game
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ secrets.UNITY_VERSION }}
          targetPlatform: StandaloneWindows64
          buildMethod: "BuildScript.Build${{ matrix.target }}"

      - name: Fix Permissions
        run: sudo chmod -R 777 Builds/Windows

      - name: Compress Build Files
        run: |
          if [ -d "Builds/Windows/Client" ]; then
              tar -czvf Builds/Windows/Client.tar.gz -C Builds/Windows Client
          fi
          if [ -d "Builds/Windows/Server" ]; then
              tar -czvf Builds/Windows/Server.tar.gz -C Builds/Windows Server
          fi

      - name: Upload Build to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.target }}
          path: Builds/Windows/${{ matrix.target }}.tar.gz

  release:
    name: Create GitHub Release
    needs: buildForAll
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Artifact ID
        id: get_artifact
        run: |
          CLIENT_ID=$(gh api repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | select(.name=="Build-Client") | .id')
          SERVER_ID=$(gh api repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | select(.name=="Build-Server") | .id')

          if [[ -z "$CLIENT_ID" || -z "$SERVER_ID" ]]; then
            echo "❌ Error: Cannot retrieve Artifact ID!"
            exit 1
          fi

          echo "CLIENT_ID=${CLIENT_ID}" >> $GITHUB_ENV
          echo "SERVER_ID=${SERVER_ID}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: "Release v1.0.${{ github.run_number }}"
          body: |
            🎉 **New Release: v1.0.${{ github.run_number }}**
            - 🖥️ **Client**: [Download](https://nightly.link/${{ github.repository }}/actions/artifacts/${{ env.CLIENT_ID }}.zip)
            - 🖥️ **Server**: [Download](https://nightly.link/${{ github.repository }}/actions/artifacts/${{ env.SERVER_ID }}.zip)
          draft: false
          prerelease: false


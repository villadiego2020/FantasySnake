name: Build Unity Game

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  buildForAll:
    name: Build for ${{ matrix.target }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [Client, Server]

    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: ♻️ Cache Library Folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            Library-${{ runner.os }}-

      - name: 🎮 Build Unity Game
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ secrets.UNITY_VERSION }}
          targetPlatform: StandaloneWindows64
          buildMethod: "BuildScript.Build${{ matrix.target }}"
        continue-on-error: true

      - name: 🔍 Debug Build Output
        run: |
          Write-Host "Checking Build Output..."
          Get-ChildItem -Path Builds\Windows -Recurse
        shell: powershell

      - name: 🔓 Fix Permissions (Windows)
        run: |
          if (Test-Path "Builds/Windows") {
              icacls Builds\Windows /grant Everyone:F /T /C /Q
              Write-Host "✅ Permissions Fixed!"
          } else {
              Write-Host "❌ Build Directory Not Found!"
          }
        shell: powershell

      - name: 📦 Compress Build Files
        run: |
          if (Test-Path "Builds/Windows/Client") {
              Write-Host "✅ Client Build Found! Compressing..."
              Compress-Archive -Path Builds/Windows/Client -DestinationPath Builds/Windows/Client.zip -Force
          } else {
              Write-Host "❌ Client Build NOT Found!"
          }
          if (Test-Path "Builds/Windows/Server") {
              Write-Host "✅ Server Build Found! Compressing..."
              Compress-Archive -Path Builds/Windows/Server -DestinationPath Builds/Windows/Server.zip -Force
          } else {
              Write-Host "❌ Server Build NOT Found!"
          }
        shell: powershell

      - name: ☁️ Upload Build to GitHub Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.target }}
          path: Builds/Windows/${{ matrix.target }}.zip
          if-no-files-found: ignore

  release:
    name: Create GitHub Release
    needs: buildForAll
    runs-on: windows-latest

    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Download Build Artifacts (Client)
        uses: actions/download-artifact@v4
        with:
          name: Build-Client
          path: Builds/Windows/

      - name: 📥 Download Build Artifacts (Server)
        uses: actions/download-artifact@v4
        with:
          name: Build-Server
          path: Builds/Windows/

      - name: 📌 Verify Build Files Exist
        run: |
          if (!(Test-Path "Builds/Windows/Client.zip")) { Write-Host "❌ Client build not found!"; exit 1 }
          if (!(Test-Path "Builds/Windows/Server.zip")) { Write-Host "❌ Server build not found!"; exit 1 }
        shell: powershell

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: "Release v1.0.${{ github.run_number }}"
          body: |
            🎉 **New Release: v1.0.${{ github.run_number }}**
            - 🖥️ **Client**: [Download](https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/Client.zip)
            - 🖥️ **Server**: [Download](https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/Server.zip)
          draft: false
          prerelease: false
          files: |
            Builds/Windows/Client.zip
            Builds/Windows/Server.zip

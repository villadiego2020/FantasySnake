name: Build Unity Game

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  buildForAll:
    name: Build for ${{ matrix.target }}
    runs-on: windows-latest  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å self-hosted ‡πÄ‡∏õ‡πá‡∏ô windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [Client, Server]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Cache Library Files
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.target }}-${{ github.run_id }}
          restore-keys: |
            Library-${{ matrix.target }}-

      - name: Build Unity Game
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ secrets.UNITY_VERSION }}
          targetPlatform: StandaloneWindows64
          buildMethod: "BuildScript.Build${{ matrix.target }}"

      - name: Fix Permissions (Windows doesn't require chmod)
        run: echo "Permissions are OK on Windows"

      - name: Remove Old Files
        shell: pwsh
        run: |
          $clientPath = "Builds\Windows\Client.zip"
          $serverPath = "Builds\Windows\Server.zip"
          if (Test-Path $clientPath) { Remove-Item $clientPath -Force }
          if (Test-Path $serverPath) { Remove-Item $serverPath -Force }

      - name: Compress Build Files
        shell: pwsh
        run: |
          $clientFolder = "Builds\Windows\Client"
          $serverFolder = "Builds\Windows\Server"
          if (Test-Path $clientFolder) { Compress-Archive -Path $clientFolder -DestinationPath "Builds\Windows\Client.zip" -Force }
          if (Test-Path $serverFolder) { Compress-Archive -Path $serverFolder -DestinationPath "Builds\Windows\Server.zip" -Force }

      - name: Upload Build to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.target }}
          path: Builds/Windows/${{ matrix.target }}.zip

  release:
    name: Create GitHub Release
    needs: buildForAll
    runs-on: windows-latest  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å self-hosted ‡πÄ‡∏õ‡πá‡∏ô windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts (Client)
        uses: actions/download-artifact@v4
        with:
          name: Build-Client
          path: Builds/Windows/

      - name: Download Build Artifacts (Server)
        uses: actions/download-artifact@v4
        with:
          name: Build-Server
          path: Builds/Windows/

      - name: List Downloaded Files
        shell: pwsh
        run: Get-ChildItem -Path Builds\Windows\ -Recurse

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: "Release v1.0.${{ github.run_number }}"
          body: |
            üéâ **New Release: v1.0.${{ github.run_number }}**
            - üñ•Ô∏è **Client**: [Download](https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/Client.zip)
            - üñ•Ô∏è **Server**: [Download](https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/Server.zip)
          draft: false
          prerelease: false
          files: |
            Builds/Windows/Client.zip
            Builds/Windows/Server.zip

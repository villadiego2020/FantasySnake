name: Build Unity Project

on: [push, pull_request]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # ✅ ล้าง Library Cache ก่อน (ใช้เฉพาะกรณีที่ต้องการ Reset Cache)
      - name: Clear Cached Library (Optional)
        run: rm -rf Library

      # ✅ ตรวจสอบว่า Library โฟลเดอร์มีอยู่หรือไม่
      - name: Ensure Library Folder Exists
        run: mkdir -p Library

      # ✅ ตั้งค่า Cache เพื่อบันทึก Library/ ไว้สำหรับ Build ถัดไป
      - name: Cache Library Files
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ github.run_id }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-

      # ✅ เริ่ม Build Unity และสร้าง Library/
      - name: Build with Unity
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ secrets.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: "-batchmode -nographics -silent-crashes -quit -logFile --disable-assembly-logger"
          buildMethod: "BuildScript.PerformBuild"

      # ✅ อัปโหลดไฟล์ Build เป็น Artifacts
      - name: Upload Build to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: |
            build/${{ matrix.targetPlatform }}
            Builds/
            Builds/Windows/

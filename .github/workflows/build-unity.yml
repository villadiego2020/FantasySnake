name: Build Unity Client

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  buildClient:
    name: Build Client
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Cache Library Files
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-Client-${{ github.run_id }}
          restore-keys: |
            Library-Client-

      - name: Build Unity Client
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ secrets.UNITY_VERSION }}
          targetPlatform: StandaloneWindows64
          buildMethod: "BuildScript.BuildClient"
          buildsPath: "Builds"

      - name: Debug - List Build Files
        shell: pwsh
        run: |
          Write-Host "üîç Checking Builds directory..."
          Get-ChildItem -Path Builds -Recurse

      - name: Remove Old Files
        shell: pwsh
        run: |
          $clientZip = "$(Get-Location)\Builds\Client.zip"
          if (Test-Path $clientZip) { Remove-Item $clientZip -Force }

      - name: Compress Build Files
        shell: pwsh
        run: |
          $clientFolder = "$(Get-Location)\Builds\Windows\Client"  # ‡πÅ‡∏Å‡πâ Path ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà Unity ‡∏™‡∏£‡πâ‡∏≤‡∏á
          $clientZip = "$(Get-Location)\Builds\Client.zip"
          
          if (Test-Path $clientFolder) { 
              Compress-Archive -Path $clientFolder -DestinationPath $clientZip -Force
              Write-Host "‚úÖ Client.zip created successfully!"
          } else {
              Write-Host "‚ùå ERROR: Client build folder not found!"
          }

      - name: Debug - Check ZIP File
        shell: pwsh
        run: |
          if (Test-Path "$(Get-Location)\Builds\Client.zip") { 
              Write-Host "‚úÖ Client.zip found!" 
          } else { 
              Write-Host "‚ùå ERROR: Client.zip not found!"
              Get-ChildItem -Path $(Get-Location)\Builds -Recurse
          }

      - name: Upload Build to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-Client
          path: ${{ github.workspace }}\Builds\Client.zip
          if-no-files-found: error  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå ‡πÉ‡∏´‡πâ workflow ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß

  release:
      name: Create GitHub Release
      needs: buildClient
      runs-on: windows-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
  
        - name: Download Build Artifacts (Client)
          uses: actions/download-artifact@v4
          with:
            name: Build-Client
            path: Builds/
  
        - name: List Downloaded Files
          shell: pwsh
          run: |
            Write-Host "üìÇ Checking downloaded files..."
            Get-ChildItem -Path Builds/ -Recurse
  
        - name: Create GitHub Release
          uses: softprops/action-gh-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          with:
            tag_name: v1.0.${{ github.run_number }}
            name: "Release v1.0.${{ github.run_number }}"
            body: |
              üéâ **New Release: v1.0.${{ github.run_number }}**
              - üñ•Ô∏è **Client**: [Download](https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/Client.zip)
            draft: false
            prerelease: false
            files: |
              Builds/Client.zip

